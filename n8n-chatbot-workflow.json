{
  "name": "Lankadhish Cab Service Chatbot",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "chatbot-webhook",
      "name": "Chatbot Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "chatbot"
    },
    {
      "parameters": {
        "jsCode": "// Initialize or update conversation state\nconst input = $input.first().json;\nconst userId = input.userId || 'anonymous';\nconst message = input.message;\nconst timestamp = new Date().toISOString();\n\n// Get conversation state from static data or initialize\nlet conversationState = $workflow.staticData.conversations || {};\nif (!conversationState[userId]) {\n  conversationState[userId] = {\n    queryCount: 0,\n    stage: 'initial',\n    queries: [],\n    contactInfo: {},\n    startTime: timestamp\n  };\n}\n\nconst userState = conversationState[userId];\n\n// Update conversation state\nif (userState.stage === 'initial' || userState.stage === 'answering') {\n  userState.queries.push({\n    message: message,\n    timestamp: timestamp\n  });\n  userState.queryCount++;\n}\n\n// Determine next stage\nif (userState.queryCount >= 2 && userState.stage !== 'collecting_info' && userState.stage !== 'completed') {\n  userState.stage = 'collecting_info';\n  userState.collectingField = 'name';\n} else if (userState.stage === 'collecting_info') {\n  // Handle contact info collection\n  if (userState.collectingField === 'name') {\n    userState.contactInfo.name = message;\n    userState.collectingField = 'phone';\n  } else if (userState.collectingField === 'phone') {\n    userState.contactInfo.phone = message;\n    userState.collectingField = 'email';\n  } else if (userState.collectingField === 'email') {\n    userState.contactInfo.email = message;\n    userState.stage = 'completed';\n  }\n}\n\n// Save updated state\nconversationState[userId] = userState;\n$workflow.staticData.conversations = conversationState;\n\nreturn {\n  json: {\n    userId: userId,\n    message: message,\n    userState: userState,\n    timestamp: timestamp\n  }\n};"
      },
      "id": "manage-conversation",
      "name": "Manage Conversation State",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "initial-queries",
              "leftValue": "={{ $json.userState.stage }}",
              "rightValue": "initial",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "answering-queries",
              "leftValue": "={{ $json.userState.stage }}",
              "rightValue": "answering",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "collecting-info",
              "leftValue": "={{ $json.userState.stage }}",
              "rightValue": "collecting_info",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "completed",
              "leftValue": "={{ $json.userState.stage }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combineOperation": "any"
        },
        "options": {}
      },
      "id": "conversation-router",
      "name": "Conversation Stage Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [680, 300]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo",
        "messages": {
          "messageType": "multipleMessages",
          "multipleMessages": [
            {
              "role": "system",
              "content": "You are a helpful customer service chatbot for Lankadhish Cab Services, a professional cab booking company in Gujarat, India. \n\nCOMPANY INFORMATION:\n- Company: Lankadhish Cab Services\n- Location: Gujarat, India\n- Services: Local rides, outstation trips, airport transfers, business travel\n- Coverage: All of Gujarat and major Indian cities\n- Contact: +91 9157575675, krush2752@gmail.com\n- Features: 24/7 service, professional drivers, GPS-enabled vehicles, competitive rates\n\nSERVICE DETAILS:\n- Local rides: â‚¹11-15 per km\n- Outstation: â‚¹22 per km\n- Airport transfers: Fixed rates available\n- Vehicle types: Sedan, SUV, Luxury cars, Minibus (14-21 seater)\n- Popular routes: Gujarat to Mumbai, Delhi, Goa, Bangalore, Rajasthan\n\nRESPONSE GUIDELINES:\n- Be friendly, professional, and helpful\n- Provide accurate information about services and rates\n- Suggest appropriate vehicle types based on needs\n- Mention key benefits: safety, reliability, professional drivers\n- Keep responses concise but informative\n- Always maintain a helpful tone\n- If asked about booking, mention they can book through the website or call\n\nAnswer the user's query about cab services professionally and helpfully."
            },
            {
              "role": "user",
              "content": "={{ $json.message }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 200
        }
      },
      "id": "ai-response",
      "name": "Generate AI Response",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "jsCode": "// Generate contact collection prompts\nconst userState = $input.first().json.userState;\nlet response = '';\n\nif (userState.collectingField === 'name') {\n  response = \"Thank you for your interest in Lankadhish Cab Services! ðŸš—\\n\\nTo provide you with the best service and send you a detailed quote, I'll need some information.\\n\\nCould you please share your name?\";\n} else if (userState.collectingField === 'phone') {\n  response = `Nice to meet you, ${userState.contactInfo.name}! ðŸ‘‹\\n\\nCould you please provide your phone number so we can contact you with booking details?`;\n} else if (userState.collectingField === 'email') {\n  response = `Thank you, ${userState.contactInfo.name}! ðŸ“±\\n\\nLastly, could you share your email address? We'll send you a detailed quote and booking confirmation.`;\n}\n\nreturn {\n  json: {\n    response: response,\n    userState: userState\n  }\n};"
      },
      "id": "contact-collection",
      "name": "Contact Collection Prompts",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Generate completion response and prepare data for Google Sheets\nconst userState = $input.first().json.userState;\n\nconst response = `Perfect! Thank you ${userState.contactInfo.name}! âœ…\\n\\nI have all your details:\\nðŸ“ž ${userState.contactInfo.phone}\\nðŸ“§ ${userState.contactInfo.email}\\n\\nOur team will contact you within 30 minutes with a personalized quote for your cab service needs.\\n\\nFor immediate booking, you can also call us at +91 9157575675.\\n\\nThank you for choosing Lankadhish Cab Services! ðŸš—ðŸ’™`;\n\n// Prepare data for Google Sheets\nconst sheetData = {\n  timestamp: new Date().toISOString(),\n  name: userState.contactInfo.name,\n  phone: userState.contactInfo.phone,\n  email: userState.contactInfo.email,\n  queries: userState.queries.map(q => q.message).join(' | '),\n  source: 'Website Chatbot',\n  status: 'New Lead'\n};\n\nreturn {\n  json: {\n    response: response,\n    sheetData: sheetData,\n    userState: userState\n  }\n};"
      },
      "id": "completion-response",
      "name": "Completion Response & Sheet Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "sheet",
        "operation": "appendOrUpdate",
        "documentId": "YOUR_GOOGLE_SHEET_ID",
        "sheetName": "Chatbot Leads",
        "columnToMatchOn": "email",
        "dataMode": "defineBelow",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Timestamp",
              "fieldValue": "={{ $json.sheetData.timestamp }}"
            },
            {
              "fieldId": "Name",
              "fieldValue": "={{ $json.sheetData.name }}"
            },
            {
              "fieldId": "Phone",
              "fieldValue": "={{ $json.sheetData.phone }}"
            },
            {
              "fieldId": "Email",
              "fieldValue": "={{ $json.sheetData.email }}"
            },
            {
              "fieldId": "Queries",
              "fieldValue": "={{ $json.sheetData.queries }}"
            },
            {
              "fieldId": "Source",
              "fieldValue": "={{ $json.sheetData.source }}"
            },
            {
              "fieldId": "Status",
              "fieldValue": "={{ $json.sheetData.status }}"
            }
          ]
        },
        "options": {}
      },
      "id": "google-sheets",
      "name": "Save to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": true,\n  \"response\": \"{{ $('Generate AI Response').item.json.message.content || $('Contact Collection Prompts').item.json.response || $('Completion Response & Sheet Data').item.json.response }}\",\n  \"stage\": \"{{ $('Manage Conversation State').item.json.userState.stage }}\",\n  \"queryCount\": {{ $('Manage Conversation State').item.json.userState.queryCount }}\n}"
      },
      "id": "webhook-response",
      "name": "Chatbot Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300]
    }
  ],
  "connections": {
    "Chatbot Webhook": {
      "main": [
        [
          {
            "node": "Manage Conversation State",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manage Conversation State": {
      "main": [
        [
          {
            "node": "Conversation Stage Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Stage Router": {
      "main": [
        [
          {
            "node": "Generate AI Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate AI Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Contact Collection Prompts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Completion Response & Sheet Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate AI Response": {
      "main": [
        [
          {
            "node": "Chatbot Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contact Collection Prompts": {
      "main": [
        [
          {
            "node": "Chatbot Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Completion Response & Sheet Data": {
      "main": [
        [
          {
            "node": "Save to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Google Sheets": {
      "main": [
        [
          {
            "node": "Chatbot Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "conversations": {}
  },
  "tags": ["chatbot", "customer-service", "lankadhish"],
  "triggerCount": 0,
  "updatedAt": "2024-03-01T10:00:00.000Z",
  "versionId": "1"
}
